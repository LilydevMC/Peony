plugins {
	id "fabric-loom" version "1.3-SNAPSHOT"
	id "io.github.juuxel.loom-quiltflower" version "1.10.0"
	id "org.jetbrains.kotlin.jvm" version "1.9.10"
	id "co.uzzu.dotenv.gradle" version "2.0.0"
	id "maven-publish"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = "${project.minecraft_version}+${project.mod_version}"
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	// owo
	maven {
		url 'https://maven.wispforest.io'
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "net.fabricmc:fabric-language-kotlin:${project.flk_version}"

	// owo
	modImplementation "io.wispforest:owo-lib:${project.owo_version}"
	include "io.wispforest:owo-sentinel:${project.owo_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

compileKotlin {
	kotlinOptions.jvmTarget = "17"
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			groupId = group
			artifactId = archivesBaseName
			version = version

			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		maven {
			name "lilydevMaven"

			if (
				project.mod_version.contains("beta") ||
				project.mod_version.contains("alpha") ||
				project.mod_version.contains("snapshot")
			) {
				url "https://maven.lilydev.com/snapshots"
			} else {
				url "https://maven.lilydev.com/releases"
			}

			credentials {
				username env.REPO_USER.orNull()
				password env.REPO_TOKEN.orNull()
			}
		}
	}
}
